<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>La scienza ha un cuore antico</title>
    <link>http://localhost:1313/pages/pymath/</link>
    <description>Recent content on La scienza ha un cuore antico</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>it</language>
    <managingEditor>barbierid@msis002003.onmicrosoft.com (barbierid)</managingEditor>
    <webMaster>barbierid@msis002003.onmicrosoft.com (barbierid)</webMaster>
    <lastBuildDate>Sun, 29 Sep 2024 22:56:42 +0100</lastBuildDate><atom:link href="http://localhost:1313/pages/pymath/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Rette</title>
      <link>http://localhost:1313/pages/pymath/cartesian/circonferenza/circ_intro/</link>
      <pubDate>Sun, 29 Sep 2024 22:56:42 +0100</pubDate>
      <author>barbierid@msis002003.onmicrosoft.com (barbierid)</author>
      <guid>http://localhost:1313/pages/pymath/cartesian/circonferenza/circ_intro/</guid>
      
      <description>&lt;p&gt;Una circonferenza è definita come il luogo geometrico dei punti equidistanti da un punto detto &lt;em&gt;centro&lt;/em&gt; e la cui distanza è denominata &lt;em&gt;raggio&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;In geometria analitica significa poter definire l&amp;rsquo;insieme dei punti che rispettano una determinata condizione che ne lega le coordinate, nel caso del piano cartesiano allora $y$ a $x$, rispettivamente ordinata e ascissa generiche.&lt;/p&gt;
&lt;h2&gt;Equazione della circonferenza&lt;/h2&gt;
&lt;p&gt;L&amp;rsquo;equazione della circonferenza deriva dalla definizione di distanza tra due punti, uno generico $P(x, y)$ ed uno specifico detto centro $C(x_c, y_c)$.&lt;/p&gt;
&lt;p&gt;$$ d_{PC} = | \sqrt{(x - x_c)^2 + (y - y_c)^2}  |$$&lt;/p&gt;
&lt;p&gt;Definendo $d_{PC} = r$ e elevando al quadrato:&lt;/p&gt;
&lt;p&gt;$$ (x - x_c)^2 + (y - y_c)^2 = r^2 $$&lt;/p&gt;
&lt;p&gt;Sviluppandone i binomi possiamo riscrivere una seconda formulazione della circonferenza più compatta.&lt;/p&gt;
&lt;p&gt;$$ x^2 - 2x_c x + x_c^2 + y^2 - 2y_c y + y_c^2 = r^2 $$&lt;/p&gt;
&lt;p&gt;$$ x^2 + y^2 - 2x_c x - 2y_c y + x_c^2 + y_c^2 - r^2 = 0 $$&lt;/p&gt;
&lt;p&gt;Utilizzando tre parametri $a$, $b$ e $c$ possiamo definire, quasi sempre, una circonferenza come riportato in calce.&lt;/p&gt;
&lt;p&gt;$$  x^2 + y^2 + ax + by + c = 0 $$&lt;/p&gt;
&lt;p&gt;Da cui risulta evidente come sia possibile legare i parametri $a$, $b$ e $c$ alle coordinate del centro ed il raggio.&lt;/p&gt;
&lt;p&gt;$$
\begin{cases}
a = -2 x_c \rightarrow x_c = -\dfrac{a}{2} \newline \newline
b = -2 y_c \rightarrow y_c = -\dfrac{b}{2} \newline \newline
c = x_c^2 + y_c^2 - r^2 = \rightarrow r = \sqrt{x_c^2 + y_c^2 - c}
\end{cases}
$$&lt;/p&gt;
&lt;p&gt;L&amp;rsquo;ultima condizione rende necessario analizzare la condizione di esistenza della figura, infatti:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;$\sqrt{x_c^2 + y_c^2 - c} &amp;gt; 0$ la circonferenza esiste;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;$\sqrt{x_c^2 + y_c^2 - c} = 0$ la circonferenza esiste ma si dice degenere, ovvero &amp;ldquo;degenera&amp;rdquo; in un singolo punto;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;$\sqrt{x_c^2 + y_c^2 - c} &amp;lt; 0$ la circonferenza non esiste in quanto non esiste un $r \in \mathbb{R}$&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Esempi&lt;/h2&gt;
&lt;h3&gt;Determina l&#39;equazione della circonferenza&lt;/h3&gt;
&lt;p&gt;Determina l&amp;rsquo;equazione della circonferenza di raggio $3$ e centro $C(1, 1)$.&lt;/p&gt;
&lt;h4&gt;Utilizzando la definizione&lt;/h4&gt;
&lt;p&gt;$$ (x - 1)^2 + (y - 1)^2 = 9 $$&lt;/p&gt;
&lt;p&gt;Risolvendo&lt;/p&gt;
&lt;p&gt;$$ x^2 - 2x + 1 + y^2 - 2y +1 = 9 $$&lt;/p&gt;
&lt;p&gt;$$ x^2 + y^2 - 2x - 2y - 7 = 0 $$&lt;/p&gt;
&lt;h4&gt;Utilizzando i parametri&lt;/h4&gt;
&lt;p&gt;$$
\begin{cases}
a = -2 x_c \rightarrow a = -2 \cdot 1 = -2 \newline \newline
b = -2 y_c \rightarrow b = -2 \cdot 1 = -2 \newline \newline
c = x_c^2 + y_c^2 - r^2 = \rightarrow c = 1 + 1 - 9 = -7
\end{cases}
$$&lt;/p&gt;
&lt;p&gt;L&amp;rsquo;equazione della circonferenza risulta essere:&lt;/p&gt;
&lt;p&gt;$$ x^2 + y^2 - 2x - 2y - 7 = 0 $$&lt;/p&gt;
&lt;h3&gt;Ricava i parametri della circonferenza&lt;/h3&gt;
&lt;p&gt;Determina le coordinate del centro ed il raggio della circonferenza di equazione $ x^2 + y^2 + 25 = 0 $.&lt;/p&gt;
&lt;h4&gt;Utilizzando i parametri&lt;/h4&gt;
&lt;p&gt;Possiamo immediatamente notare come la circonferenza in oggetto non abbia centro nell&amp;rsquo;origine, infatti non presenta termini in $x$ ed $y$, ovvero i parametri $a$ e $b$ sono nulli.&lt;/p&gt;
&lt;p&gt;Possiamo quindi calcolarne il raggio tramite l&amp;rsquo;apposita relazione:&lt;/p&gt;
&lt;p&gt;$$ r = \sqrt{x_c^2 + y_c^2 - c} $$&lt;/p&gt;
&lt;p&gt;$$ r = \sqrt{0^2 + 0^2 - (25)} = \sqrt{- 25}$$&lt;/p&gt;
&lt;p&gt;Otteniamo un radicale pari con argomento negativo, questa relazione non ha soluzione nei numeri reali dunque non può esistere una circonferenza di equazione $ x^2 + y^2 + 25 = 0 $.&lt;/p&gt;
</description>
      
    </item>
    
    <item>
      <title>Relazione tra forma esplicita ed implicita</title>
      <link>http://localhost:1313/pages/pymath/cartesian/rette/rette_impl_espl/</link>
      <pubDate>Sun, 29 Sep 2024 18:56:42 +0100</pubDate>
      <author>barbierid@msis002003.onmicrosoft.com (barbierid)</author>
      <guid>http://localhost:1313/pages/pymath/cartesian/rette/rette_impl_espl/</guid>
      
      <description>&lt;p&gt;La stessa retta può essere rappresentata in entrambe le forme indifferentemente e possiamo trovare relazioni che leghino i vari parametri.&lt;/p&gt;
&lt;p&gt;$$ ax + by + c = 0 $$
$$ by = -ax - c $$
$$ y = \dfrac{-ax - c}{b} $$
$$ y = -\dfrac{a}{b}x -\dfrac{c}{b} $$&lt;/p&gt;
&lt;p&gt;Ovvero è possibile notare che, escluso il caso di $b = 0$ come già anticipato una retta parallela all&amp;rsquo;asse $y$, i parametri $m$ e $q$ possono essere letti come rapporti di $a$, $b$ e $c$.&lt;/p&gt;
&lt;p&gt;$$
\begin{cases}
m = -\dfrac{a}{b} \newline \newline
q = -\dfrac{c}{b}
\end{cases}
$$&lt;/p&gt;
&lt;h2&gt;Esempio&lt;/h2&gt;
&lt;p&gt;La retta, riportata in forma implicita, $ 2x - y + 1 = 0 $ può essere facilmente analizzata notando che:&lt;/p&gt;
&lt;p&gt;$$
\begin{cases}
m = -\dfrac{2}{-1} = 2 \newline \newline
q = -\dfrac{1}{-1} = 1
\end{cases}
$$&lt;/p&gt;
&lt;p&gt;ovvero&lt;/p&gt;
&lt;p&gt;$$ y = 2x + 1 $$&lt;/p&gt;
</description>
      
    </item>
    
    <item>
      <title>Rette</title>
      <link>http://localhost:1313/pages/pymath/cartesian/rette/rette_intro/</link>
      <pubDate>Sun, 29 Sep 2024 17:56:42 +0100</pubDate>
      <author>barbierid@msis002003.onmicrosoft.com (barbierid)</author>
      <guid>http://localhost:1313/pages/pymath/cartesian/rette/rette_intro/</guid>
      
      <description>&lt;p&gt;Una retta è definita come il luogo geometrico dei punti allineati lungo una specifica direzione.&lt;/p&gt;
&lt;p&gt;In geometria analitica significa poter definire l&amp;rsquo;insieme dei punti che rispettano una determinata condizione che ne lega le coordinate, nel caso del piano cartesiano allora $y$ a $x$, rispettivamente ordinata e ascissa generiche.&lt;/p&gt;
&lt;h2&gt;Forma implicita&lt;/h2&gt;
&lt;p&gt;La forma implicita della retta è rappresentata e determinata da tre parametri $a$, $b$ e $c$.&lt;/p&gt;
&lt;p&gt;$$ ax + by + c = 0 $$&lt;/p&gt;
&lt;h2&gt;Forma esplicita&lt;/h2&gt;
&lt;p&gt;La forma esplicita della retta permette di ricavare immediatamente il valore della coordinata $y$ (variabile dipendente) in funzione della $x$ (variabile indipendente).&lt;/p&gt;
&lt;p&gt;$$ y = mx + q $$&lt;/p&gt;
&lt;p&gt;Nel caso della forma esplicita sono di immediato riconoscimento i parametri $m$ e $q$, tuttavia le rette parallele all&amp;rsquo;asse $y$ non possono essere rappresentate in questa forma.&lt;/p&gt;
&lt;h3&gt;Termine noto&lt;/h3&gt;
&lt;p&gt;Il termine noto o quota $q$ rappresenta la coordinata $y$ che la retta assume nel punto di ascissa $0$. Questa informazione è utile per poter ricavare immediatamente un&amp;rsquo;informazione geometrica del punto $(0, y_p)$ appartenente alla retta.&lt;/p&gt;
&lt;iframe src=&#34;https://www.desmos.com/calculator/nmadjgzbgv?embed&#34; width=&#34;500&#34; height=&#34;500&#34; style=&#34;border: 1px solid #ccc&#34; frameborder=0&gt;&lt;/iframe&gt;
&lt;h3&gt;Coefficiente angolare&lt;/h3&gt;
&lt;p&gt;Il coefficiente angolare $m$ è un parametro associato alla pendenza della retta studiata. Maggiore è $m$ maggiore sarà il divario, date due rette $r$ e $s$, tra le coordinate $y$ a parità di $x$.&lt;/p&gt;
&lt;iframe src=&#34;https://www.desmos.com/calculator/1dnackvxu8?embed&#34; width=&#34;500&#34; height=&#34;500&#34; style=&#34;border: 1px solid #ccc&#34; frameborder=0&gt;&lt;/iframe&gt;</description>
      
    </item>
    
    <item>
      <title>Appunti di Matematica</title>
      <link>http://localhost:1313/pages/pymath/pymath/</link>
      <pubDate>Sat, 28 Sep 2024 15:55:42 +0100</pubDate>
      <author>barbierid@msis002003.onmicrosoft.com (barbierid)</author>
      <guid>http://localhost:1313/pages/pymath/pymath/</guid>
      
      <description>&lt;p&gt;Qui potrete trovare una selezione accurata di risorse didattiche per approfondire i vari aspetti della matematica.&lt;/p&gt;
&lt;h2&gt;Geometria analitica&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;http://localhost:1313/pages/pymath/cartesian/intro_cart/&#34; title=&#34;Introduzione al piano cartesiano&#34;&gt;Introduzione al piano cartesiano&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;Punti, segmenti e rette&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;http://localhost:1313/pages/pymath/cartesian/rette/rette_intro/&#34; title=&#34;Rette&#34;&gt;Rette&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://localhost:1313/pages/pymath/cartesian/rette/rette_impl_espl/&#34; title=&#34;Relazione tra forma esplicita ed implicita&#34;&gt;Relazione tra forma esplicita ed implicita&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://localhost:1313/pages/pymath/cartesian/rette/rette_eser/&#34; title=&#34;Operazioni con rette&#34;&gt;Operazioni con rette&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://localhost:1313/pages/pymath/cartesian/rette/rette_fasci/&#34; title=&#34;Fasci di rette&#34;&gt;Fasci di rette&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://localhost:1313/pages/pymath/cartesian/rette/rette_form/&#34; title=&#34;Formulario&#34;&gt;Formulario&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;Parabola&lt;/h3&gt;
&lt;h3&gt;Circonferenza&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;http://localhost:1313/pages/pymath/cartesian/circonferenza/circ_intro/&#34; title=&#34;Circonferenza&#34;&gt;Circonferenza&lt;/a&gt;&lt;/p&gt;
</description>
      
    </item>
    
    <item>
      <title>Punti e segmenti</title>
      <link>http://localhost:1313/pages/pymath/cartesian/points_segments/</link>
      <pubDate>Fri, 27 Sep 2024 17:56:42 +0100</pubDate>
      <author>barbierid@msis002003.onmicrosoft.com (barbierid)</author>
      <guid>http://localhost:1313/pages/pymath/cartesian/points_segments/</guid>
      
      <description>&lt;p&gt;Ogni punto sul piano cartesiano è determinato dalle sue coordinate, relativamente all&amp;rsquo;asse delle &lt;em&gt;ascisse&lt;/em&gt; $x$ e a quello delle &lt;em&gt;ordinate&lt;/em&gt; $y$.&lt;/p&gt;
&lt;p&gt;$$ P(x_p, y_p) $$&lt;/p&gt;
&lt;h3&gt;Punto medio&lt;/h3&gt;
&lt;p&gt;Dati due punti $A$ e $B$, identificati da due set di coordinate $(x_a, y_a)$ e $(x_b, y_b)$, è possibile calcolarne il punto medio $M$, ovver il punto che suddivide il segmento $\overline{AB}$ in due segmenti congruenti $\overline{AM}$ $\overline{MB}$.
$$ M \left(\dfrac{x_A + x_B}{2}, : \dfrac{y_A + y_B}{2} \right) $$&lt;/p&gt;
&lt;h3&gt;Distanza tra due punti&lt;/h3&gt;
&lt;p&gt;Dati due punti $A$ e $B$ è possibile calcolarne la distanza, ovvero la lunghezza del segmento che ha come estremi $A$ e $B$, sfruttando applicando il teorema di Pitagora su sul triangolo avente come cateti le differenze di coordinate sulle ascisse e ordinate dei due punti.&lt;/p&gt;
&lt;p&gt;$$ d = \left| \sqrt{(x_A - x_B)^2 + (y_A - y_B)^2} \right| $$&lt;/p&gt;
&lt;p&gt;Si può notare come la distanza tra due punti sia indifferentemente calcolata a partire da $A$ o da $B$ e che sarà sempre definita positiva dalla presenza del valore assoluto.&lt;/p&gt;
&lt;p&gt;

&lt;!DOCTYPE html&gt;
&lt;html lang=&#34;it&#34;&gt;
&lt;head&gt;
    &lt;meta charset=&#34;UTF-8&#34;&gt;
    &lt;meta name=&#34;viewport&#34; content=&#34;width=device-width, initial-scale=1.0&#34;&gt;
    &lt;title&gt;Segmento con Punto Medio&lt;/title&gt;
    &lt;style&gt;
        canvas {
            border: 1px solid #000;
            display: block;
            margin: 20px auto;
        }
    &lt;/style&gt;
&lt;/head&gt;
&lt;body&gt;

    &lt;canvas id=&#34;segmentCanvas&#34; width=&#34;400&#34; height=&#34;400&#34;&gt;&lt;/canvas&gt;

    &lt;script&gt;

    // Function to draw x and y axes
        function drawAxes(context, canvasWidth, canvasHeight) {
            // Draw x-axis
            context.beginPath();
            context.moveTo(0, canvasHeight / 2);
            context.lineTo(canvasWidth, canvasHeight / 2);
            context.stroke();

            // Draw y-axis
            context.beginPath();
            context.moveTo(canvasWidth / 2, 0);
            context.lineTo(canvasWidth / 2, canvasHeight);
            context.stroke();


            // Draw horizontal grid lines
            for (let y = 0; y &lt; canvasHeight; y += 10) {
                context.beginPath();
                context.moveTo(0, y);
                context.lineTo(canvasWidth, y);
                context.lineWidth = 0.1;
                context.stroke();
            }

            // Draw vertical grid lines
            for (let x = 0; x &lt; canvasWidth; x += 10) {
                context.beginPath();
                context.moveTo(x, 0);
                context.lineTo(x, canvasHeight);
                context.lineWidth = 0.1;
                context.stroke();
            }
        }

        // Funzione per generare un punto casuale sul canvas
        function generateRandomPoint() {
		    return {
		        x: Math.floor(Math.random() * 41) - 20,  // Intervallo [-20, 20]
		        y: Math.floor(Math.random() * 41) - 20   // Intervallo [-20, 20]
		    };
		}

		// Funzione per convertire le coordinate matematiche [-20, 20] in coordinate pixel del canvas [0, 400]
		function mapToCanvasCoordinates(point, canvasWidth, canvasHeight) {
		    return {
		        x: (point.x + 20) * (canvasWidth / 40),  // Mappa da [-20, 20] a [0, canvasWidth]
		        y: canvasHeight - ((point.y + 20) * (canvasHeight / 40))  // Mappa da [-20, 20] a [0, canvasHeight] e inverte y
		    };
		}

        // Funzione per calcolare il punto medio tra due punti
        // Funzione per calcolare il punto medio tra due punti, restituendo una frazione
		function calculateMidPoint(A, B) {
		    return {
		        x: { num: A.x + B.x, den: 2 },  // Punto medio in forma di frazione
		        y: { num: A.y + B.y, den: 2 }
		    };
		}

		// Funzione per mostrare il risultato del punto medio come frazione
		function displayFraction(fraction) {
		    // Se il numeratore è divisibile per il denominatore, restituisci il numero intero
		    if (fraction.num % fraction.den === 0) {
		        return (fraction.num / fraction.den).toString();
		    } else {
		        // Altrimenti, restituisci la frazione
		        return fraction.num + &#34;/&#34; + fraction.den;
		    }
		}


		// Funzione per calcolare la distanza tra due punti e restituire la rappresentazione con radice
		function calculateDistance(A, B) {
		    const deltaX = B.x - A.x;
		    const deltaY = B.y - A.y;

		    // Calcola il quadrato della distanza
		    const distanceSquared = deltaX * deltaX + deltaY * deltaY;

		    // Calcola la radice quadrata approssimata
		    const sqrtDistance = Math.sqrt(distanceSquared);

		    // Se la radice quadrata è un numero intero, restituiscilo come tale
		    if (Number.isInteger(sqrtDistance)) {
		        return sqrtDistance.toString();
		    } else {
		        // Altrimenti, restituisci la rappresentazione con la radice quadrata
		        return &#34;√(&#34; + distanceSquared + &#34;)&#34;;
		    }
		}



        // Funzione per disegnare un segmento e i punti sul canvas
        function drawSegment(context, A, B, M, canvasWidth, canvasHeight) {
		    // Mappiamo i punti A, B, M alle coordinate del canvas
		    const ACanvas = mapToCanvasCoordinates(A, canvasWidth, canvasHeight);
		    const BCanvas = mapToCanvasCoordinates(B, canvasWidth, canvasHeight);
		    const MCanvas = mapToCanvasCoordinates(M, canvasWidth, canvasHeight);

		    // Disegna il segmento tra A e B
		    context.beginPath();
		    context.moveTo(ACanvas.x, ACanvas.y);
		    context.lineTo(BCanvas.x, BCanvas.y);
		    context.strokeStyle = &#39;black&#39;;
		    context.lineWidth = 2;
		    context.stroke();

		    // Disegna il punto A
		    context.beginPath();
		    context.arc(ACanvas.x, ACanvas.y, 5, 0, 2 * Math.PI);
		    context.fillStyle = &#39;red&#39;;
		    context.fill();
		    context.fillText(&#34;A (&#34; + A.x + &#34;, &#34; + A.y + &#34;)&#34;, ACanvas.x + 10, ACanvas.y - 10);

		    // Disegna il punto B
		    context.beginPath();
		    context.arc(BCanvas.x, BCanvas.y, 5, 0, 2 * Math.PI);
		    context.fillStyle = &#39;blue&#39;;
		    context.fill();
		    context.fillText(&#34;B (&#34; + B.x + &#34;, &#34; + B.y + &#34;)&#34;, BCanvas.x + 10, BCanvas.y - 10);

		    // Disegna il punto medio M
		    context.beginPath();
		    context.arc(MCanvas.x, MCanvas.y, 5, 0, 2 * Math.PI);
		    context.fillStyle = &#39;green&#39;;
		    context.fill();
		    context.fillText(&#34;M (&#34; + M.x.toFixed(2) + &#34;, &#34; + M.y.toFixed(2) + &#34;)&#34;, MCanvas.x + 10, MCanvas.y + 10);
		}

        // Funzione principale per eseguire il disegno
        function main() {
            var canvas = document.getElementById(&#39;segmentCanvas&#39;);
            var context = canvas.getContext(&#39;2d&#39;);

        	drawAxes(context, canvas.width, canvas.height, );

            // Genera due punti casuali A e B
            var A = generateRandomPoint(canvas.width, canvas.height);
            var B = generateRandomPoint(canvas.width, canvas.height);

            // Calcola il punto medio M
            var M = calculateMidPoint(A, B);

            // Calcola la distanza tra A e B
            var distance = calculateDistance(A, B);

            // Ad esempio, per visualizzare il punto medio M nel disegno:
			// context.fillText(&#34;M (&#34; + displayFraction(M.x) + &#34;, &#34; + displayFraction(M.y) + &#34;)&#34;, M.x.num / M.x.den + 10, M.y.num / M.y.den + 10);

			// Per visualizzare la distanza sotto il canvas
			context.fillText(&#34;Distanza tra A e B: &#34; + calculateDistance(A, B), 10, canvas.height - 10);

		    // Disegna il segmento e i punti sul canvas
		    drawSegment(context, A, B, M, canvas.width, canvas.height);

            // Mostra la distanza sotto il canvas
            context.font = &#34;16px Arial&#34;;
            context.fillStyle = &#34;black&#34;;
            context.fillText(&#34;Distanza tra A e B: &#34; + distance.toFixed(2), 10, canvas.height - 10);
        }

        // Esegui la funzione principale quando la pagina viene caricata
        window.onload = main;
    &lt;/script&gt;

&lt;/body&gt;
&lt;/html&gt;


&lt;/p&gt;
</description>
      
    </item>
    
    <item>
      <title>Introduzione al piano cartesiano</title>
      <link>http://localhost:1313/pages/pymath/cartesian/intro_cart/</link>
      <pubDate>Fri, 27 Sep 2024 15:56:42 +0100</pubDate>
      <author>barbierid@msis002003.onmicrosoft.com (barbierid)</author>
      <guid>http://localhost:1313/pages/pymath/cartesian/intro_cart/</guid>
      
      <description>&lt;p&gt;Il piano cartesiano, caso particolare dei più generici &amp;ldquo;sistemi di riferimento cartesiani&amp;rdquo;, è uno strumento matematico fondamentale per rappresentare graficamente relazioni e funzioni.&lt;/p&gt;
&lt;p&gt;Introdotto da René Descartes (italianizzato in Renato Cartesio), il piano cartesiano permette di descrivere la posizione di punti nello spazio attraverso due coordinate: l&amp;rsquo;ascissa $x$ e l&amp;rsquo;ordinata $y$ intersecatisi in un punto detto origine $O$.
Questo concetto viene generalizzato nel caso di spazi $N$ dimensionali con l&amp;rsquo;utilizzo di $N$ rette ortogonali.&lt;/p&gt;
&lt;!-- &lt;center&gt;&lt;em&gt;Quoties duo numeri cognoscuntur, potest eorum locus in plano definiri per intersectionem duarum rectarum.&lt;/em&gt;&lt;/center&gt; --&gt;
&lt;p&gt;&lt;a href=&#34;http://localhost:1313/pages/pymath/cartesian/points_segments/&#34; title=&#34;Punti e segmenti&#34;&gt;Punti e segmenti&lt;/a&gt;&lt;/p&gt;
</description>
      
    </item>
    
    <item>
      <title>Fasci di rette</title>
      <link>http://localhost:1313/pages/pymath/cartesian/rette/rette_form/</link>
      <pubDate>Thu, 12 Sep 2024 22:56:42 +0100</pubDate>
      <author>barbierid@msis002003.onmicrosoft.com (barbierid)</author>
      <guid>http://localhost:1313/pages/pymath/cartesian/rette/rette_form/</guid>
      
      <description>&lt;p&gt;Tutte le informazioni precedenti sono sufficienti per poter affrontare quasi qualsiasi problema di geometria analitica che riguardi rette o punti.&lt;/p&gt;
&lt;p&gt;Esistono tuttavia alcune scorciatoie per agevolarci nella risoluzione e risparmiare tempo prezioso.&lt;/p&gt;
&lt;h2&gt;Coefficiente angolare della retta passante per due punti&lt;/h2&gt;
&lt;p&gt;Dati due punti $A$ e $B$ è possibile calcolare il coefficiente angolare della retta che li unisce.&lt;/p&gt;
&lt;p&gt;$$ m_{AB} = \dfrac{y_A - y_B}{x_A - x_B}$$&lt;/p&gt;
&lt;p&gt;Come nel caso del punto medio o della distanza tra due punti, la scelta del punto $A$ o $B$ come primo o secondo termine è indifferente. È invece importante mantenere lo stesso ordine al numeratore ed al denominatore (prima $A$ poi $B$ o viceversa).&lt;/p&gt;
&lt;h2&gt;Retta passante per due punti&lt;/h2&gt;
&lt;p&gt;Dati due punti $A$ e $B$ è possibile calcolare immediatamente la retta che li unisce.&lt;/p&gt;
&lt;p&gt;$$ \dfrac{y - y_A}{y_B - y_A} = \dfrac{x - x_A}{x_B - x_A} $$&lt;/p&gt;
&lt;p&gt;Questa equazione deriva dalla risoluzione del sistema contenente il fascio di rette passante per il primo e il secondo punto, oppure del fascio di rette avente il coefficiente angolare della retta passante per $\overline{AB}$ forzandolo per $A$ o $B$.&lt;/p&gt;
&lt;h2&gt;Distanza punto retta&lt;/h2&gt;
&lt;p&gt;Dato un punto $P$ ed una retta $r$ possiamo definire la distanza tra i due enti come la lunghezza del segmento minimo che li unisce. Questa definizione porta a identificare la distanza nella lunghezza del segmento con estremi il punto $P$ ed il punto $H$, intersezione della retta che cade perpendicolarmente alla retta $r$ e passa per il punto $P$.&lt;/p&gt;
&lt;p&gt;$$ P( \bm{X_p}, : \bm{Y_p}) $$&lt;/p&gt;
&lt;p&gt;$$ r: : y= m_r x + q_r \rightarrow a_r x + b_r y + c_r = 0$$&lt;/p&gt;
&lt;p&gt;Anche in questo caso esiste una formula molto comoda che richiede tuttavia di scrivere la retta $r$ in forma implicita.&lt;/p&gt;
&lt;p&gt;$$ d = \dfrac{\left| a_r \bm{X_p} + b_r \bm{Y_p} + c_r \right|}{\sqrt{a_r^2 + b_r^2}} $$&lt;/p&gt;
&lt;p&gt;Si può facilmente notare come la distanza dipenda sia dai &lt;em&gt;parametri&lt;/em&gt; della retta che dalle &lt;b&gt;COORDINATE&lt;/b&gt; del punto.&lt;/p&gt;
&lt;p&gt;Tramite questa utile formula è facile calcolare i lati di un poligono regolare o la distanza tra due rette parallele.&lt;/p&gt;
</description>
      
    </item>
    
    <item>
      <title>Fasci di rette</title>
      <link>http://localhost:1313/pages/pymath/cartesian/rette/rette_fasci/</link>
      <pubDate>Thu, 12 Sep 2024 21:56:42 +0100</pubDate>
      <author>barbierid@msis002003.onmicrosoft.com (barbierid)</author>
      <guid>http://localhost:1313/pages/pymath/cartesian/rette/rette_fasci/</guid>
      
      <description>&lt;p&gt;A volte risulta utile non pensare ad una retta singola ma ragionare su tutte le rette che possano soddisfare una specifica condizione: per esempio che risultino parallele ad una retta data o che passino per uno stesso punto.&lt;/p&gt;
&lt;h2&gt;Fascio proprio&lt;/h2&gt;
&lt;p&gt;Il fascio proprio di rette ci permette di identificare velocemente tutte le possibili rette che passino per un punto $P$ tramite l&amp;rsquo;equazione.&lt;/p&gt;
&lt;p&gt;$$ y - y_P = m (x - x_P) $$&lt;/p&gt;
&lt;p&gt;Al variare del parametro $m$ possiamo identificare le varie soluzioni (che si incontrano nel punto $P$).&lt;/p&gt;
&lt;h2&gt;Fascio improprio&lt;/h2&gt;
&lt;p&gt;Il fascio improprio di rette ci permette di identificare velocemente tutte le possibili rette che risultino parallele ad una retta data, ovvero che presentino lo stesso $m_r$.&lt;/p&gt;
&lt;p&gt;$$ y = m_r x + q $$&lt;/p&gt;
&lt;p&gt;Al variare del parametro $q$ possiamo identificare le varie soluzioni (che hanno lo stesso $m_r$).&lt;/p&gt;
</description>
      
    </item>
    
    <item>
      <title>Operazioni con rette</title>
      <link>http://localhost:1313/pages/pymath/cartesian/rette/rette_eser/</link>
      <pubDate>Thu, 12 Sep 2024 20:56:42 +0100</pubDate>
      <author>barbierid@msis002003.onmicrosoft.com (barbierid)</author>
      <guid>http://localhost:1313/pages/pymath/cartesian/rette/rette_eser/</guid>
      
      <description>&lt;h2&gt;Appartenenza di un punto ad una retta&lt;/h2&gt;
&lt;p&gt;Un punto $P$ appartiene ad una retta quando, sostituendone le coordinate $x_p$ e $y_p$ nell&amp;rsquo;equazione della retta, si ottiene una identità.&lt;/p&gt;
&lt;p&gt;$$ y_p = m x_p + q \rightarrow \text{Risulta verificata}$$
$$ a x_p + b y_p + c = 0 \rightarrow \text{Risulta verificata}$$&lt;/p&gt;
&lt;h2&gt;Posizioni reciproche tra rette&lt;/h2&gt;
&lt;p&gt;Due rette possono essere definite, una rispetto all&amp;rsquo;altra, come parallele (ovvero due rette che non hanno punti in comuni o che sono coincidenti) oppure incidenti. Possiamo discriminare i vari casi tramite lo studio dei rispettivi coefficienti angolari.&lt;/p&gt;
&lt;p&gt;Prendiamo il caso di due rette generiche $r$ e $s$ di equazioni rispettivamente:&lt;/p&gt;
&lt;p&gt;$$ r: : y= m_r x + q_r $$
$$ s: : y= m_s x + q_s $$&lt;/p&gt;
&lt;h3&gt;Rette parallele&lt;/h3&gt;
&lt;p&gt;Due rette si dicono parallele se i due coefficienti angolari sono uguali.&lt;/p&gt;
&lt;p&gt;$$ m_r = m_s $$&lt;/p&gt;
&lt;p&gt;In tutti gli altri casi le rette si dicono incidenti o oblique.&lt;/p&gt;
&lt;h3&gt;Rette perpendicolari&lt;/h3&gt;
&lt;p&gt;Due rette perpendicolari sono due rette incidenti molto particolari: definiscono infatti quattro angoli retti nel punto di intersezione. Si può quindi dimostrare che per due rette perpendicolari il prodotto dei coefficienti angolari deve essere $-1$, ovvero il coefficiente angolare di una deve essere l&amp;rsquo;inverso (L&amp;rsquo;inverso, o reciproco, di un numero $n$ è definito come $\dfrac{1}{n}$.) opposto (L&amp;rsquo;opposto di un numero $m$ è definito come $-m$.) dell&amp;rsquo;altra.&lt;/p&gt;
&lt;p&gt;$$ m_r m_s = - 1 $$&lt;/p&gt;
&lt;p&gt;$$ m_r = -\dfrac{1}{m_s} $$&lt;/p&gt;
&lt;h2&gt;Intersezione tra due rette&lt;/h2&gt;
&lt;p&gt;Il punto di intersezione tra due rette è quel punto, salvo il caso di due rette parallele non coincidenti, che appartiene sia alla prima che alla seconda retta.&lt;/p&gt;
&lt;p&gt;La ricerca di questo punto richiede quindi lo studio di un sistema di due equazioni, le equazioni delle due rette, in due incognite, le due coordinate del punto $P$.&lt;/p&gt;
&lt;p&gt;$$
\begin{cases}
y = m_r x + q_r \newline \newline
y = m_s x + q_s
\end{cases}
$$&lt;/p&gt;
&lt;p&gt;Risulta ancora più evidente tramite lo studio delle rette in forma implicita, infatti:&lt;/p&gt;
&lt;p&gt;$$
\begin{cases}
a_r x + b_r y + c_r = 0 \newline \newline
a_s x + b_s y + c_s = 0
\end{cases}
$$&lt;/p&gt;
&lt;p&gt;Sappiamo infatti dallo studio dei sistemi lineari che il rapporto dei coefficienti $a$, $b$ e $c$ dà luogo a casi differenti:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;per $\dfrac{a_r}{a_s} \neq \dfrac{b_r}{b_s}$ il sistema è determinato.&lt;/li&gt;
&lt;li&gt;per $\dfrac{a_r}{a_s} = \dfrac{b_r}{b_s}$ il sistema è indeterminato o impossibile:
&lt;ul&gt;
&lt;li&gt;per $\dfrac{a_r}{a_s} = \dfrac{b_r}{b_s} = \dfrac{c_r}{c_s} $ il sistema è indeterminato;&lt;/li&gt;
&lt;li&gt;per $\dfrac{a_r}{a_s} = \dfrac{b_r}{b_s} \neq \dfrac{c_r}{c_s} $ il sistema è impossibile.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Ricordando che abbiamo definito la relazione $m = -\dfrac{b}{a}$ e che possiamo invertire le condizioni precedenti in $ \dfrac{a_r}{b_r} = \dfrac{a_s}{b_s} $ e $ \dfrac{a_r}{b_r} \neq \dfrac{a_s}{b_s} $ otteniamo proprio quanto detto pocanzi.&lt;/p&gt;
&lt;p&gt;Nel caso di coefficienti angolari uguali le rette risultano parallele ovvero non si incontrano mai (impossibili) o coincidono (soluzione indeterminata).&lt;/p&gt;
</description>
      
    </item>
    
  </channel>
</rss>
